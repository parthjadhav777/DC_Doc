# Main nginx.conf file
# Place this in /etc/nginx/nginx.conf or include these configurations

# Events context for worker connections
events {
    worker_connections 1024;
}

# HTTP context for web traffic handling
http {
    # Basic settings
    include       mime.types;
    default_type  application/octet-stream;
    sendfile      on;
    keepalive_timeout  65;

    # Upstream definitions for different load balancing methods
    
    # 1. Round Robin (default)
    upstream backend_round_robin {
        server localhost:8081;
        server localhost:8082;
        server localhost:8083;
    }

    # 2. Least Connections
    upstream backend_least_conn {
        least_conn;
        server localhost:8081;
        server localhost:8082;
        server localhost:8083;
    }

    # 3. IP Hash
    upstream backend_ip_hash {
        ip_hash;
        server localhost:8081;
        server localhost:8082;
        server localhost:8083;
    }

    # 4. Weighted Round Robin
    upstream backend_weighted {
        server localhost:8081 weight=3; # This server gets 3x the traffic
        server localhost:8082 weight=2; # This server gets 2x the traffic
        server localhost:8083 weight=1; # This server gets 1x the traffic
    }

    # Main server block for load balancer
    server {
        listen 80;
        server_name localhost;

        # Access and error logs
        access_log /var/log/nginx/load-balancer.access.log;
        error_log /var/log/nginx/load-balancer.error.log;

        # Health check location
        location /health {
            return 200 'Load Balancer is healthy\n';
            add_header Content-Type text/plain;
        }

        # Round Robin
        location /round-robin/ {
            proxy_pass http://backend_round_robin/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # Health check configuration
            proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 3;
            proxy_next_upstream_timeout 10s;
        }

        # Least Connections
        location /least-conn/ {
            proxy_pass http://backend_least_conn/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # IP Hash
        location /ip-hash/ {
            proxy_pass http://backend_ip_hash/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Weighted Round Robin
        location /weighted/ {
            proxy_pass http://backend_weighted/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Detailed status page
        location /status {
            stub_status on;
            access_log off;
            allow 127.0.0.1; # Only allow localhost access
            deny all;
        }
    }

    # Backend server configurations
    # Server 1
    server {
        listen 8081;
        server_name localhost;

        location / {
            return 200 'Backend Server 1\n';
            add_header Content-Type text/plain;
            add_header X-Server-ID "server1";
        }
    }

    # Server 2
    server {
        listen 8082;
        server_name localhost;

        location / {
            return 200 'Backend Server 2\n';
            add_header Content-Type text/plain;
            add_header X-Server-ID "server2";
        }
    }

    # Server 3
    server {
        listen 8083;
        server_name localhost;

        location / {
            return 200 'Backend Server 3\n';
            add_header Content-Type text/plain;
            add_header X-Server-ID "server3";
        }
    }
}